{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const authService = {\n  async login(username, password) {\n    try {\n      const response = await api.post('/login/', {\n        username,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n    }\n  },\n  async register(userData) {\n    try {\n      const response = await api.post('/register/', userData);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message;\n    }\n  },\n  async healthCheck() {\n    try {\n      const response = await api.get('/health-check/');\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","withCredentials","headers","authService","login","username","password","response","post","data","error","_error$response","message","register","userData","_error$response2","healthCheck","get","_error$response3"],"sources":["/Users/admin/Documents/manus/p/medixpert_frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const authService = {\n  async login(username, password) {\n    try {\n      const response = await api.post('/login/', { username, password });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  async register(userData) {\n    try {\n      const response = await api.post('/register/', userData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  async healthCheck() {\n    try {\n      const response = await api.get('/health-check/');\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  }\n};\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,SAAS,EAAE;QAAEH,QAAQ;QAAEC;MAAS,CAAC,CAAC;MAClE,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACd,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACE,OAAO;IAC7C;EACF,CAAC;EAED,MAAMC,QAAQA,CAACC,QAAQ,EAAE;IACvB,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,YAAY,EAAEM,QAAQ,CAAC;MACvD,OAAOP,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAK,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAL,KAAK,CAACH,QAAQ,cAAAQ,gBAAA,uBAAdA,gBAAA,CAAgBN,IAAI,KAAIC,KAAK,CAACE,OAAO;IAC7C;EACF,CAAC;EAED,MAAMI,WAAWA,CAAA,EAAG;IAClB,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMT,GAAG,CAACmB,GAAG,CAAC,gBAAgB,CAAC;MAChD,OAAOV,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAQ,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAR,KAAK,CAACH,QAAQ,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBT,IAAI,KAAIC,KAAK,CAACE,OAAO;IAC7C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}